// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: events.sql

package repository

import (
	"context"
	"encoding/json"
)

const createEvent = `-- name: CreateEvent :one
INSERT INTO events (
    event_type, entity_type, entity_id, event_data
) VALUES (
    $1, $2, $3, $4
 )
RETURNING id, event_type, entity_type, entity_id, event_data, created_at
`

type CreateEventParams struct {
	EventType  string
	EntityType string
	EntityID   string
	EventData  json.RawMessage
}

func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error) {
	row := q.db.QueryRowContext(ctx, createEvent,
		arg.EventType,
		arg.EntityType,
		arg.EntityID,
		arg.EventData,
	)
	var i Event
	err := row.Scan(
		&i.ID,
		&i.EventType,
		&i.EntityType,
		&i.EntityID,
		&i.EventData,
		&i.CreatedAt,
	)
	return i, err
}
